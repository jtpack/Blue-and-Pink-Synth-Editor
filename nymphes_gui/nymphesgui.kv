#:kivy 2.1.0
#:import C kivy.utils.get_color_from_hex
#:import SlideTransition kivy.uix.screenmanager.SlideTransition

ScreenManager:
    Screen:
        name: 'dashboard'

        canvas.before:
            Color:
                rgba: C('#000000FF')
            Rectangle:
                pos: self.pos
                size: self.size

        BoxLayout:
            orientation: 'vertical'
            padding: (self.height * 0.015, 0, self.height * 0.015, self.height * 0.015)
            spacing: self.height * 0.015

            # Top Bar
            TopBar:
                size_hint: 1, 1/9
                corner_radius: root.height * 0.015

            # Box to Contain Voice Mode Bar
            # and Control Sections
            BoxLayout:
                orientation: 'horizontal'
                size_hint: 1, 8/9
                padding: (self.height * 0.015, 0, self.height * 0.015, self.height * 0.015)
                spacing: self.height * 0.015

                canvas.before:
                    Color:
                        rgba: C('#0000FFFF')
                    Rectangle:
                        pos: self.pos
                        size: self.size

                # Left Bar
                LeftBar:
                    size_hint: 1/8, 1
                    corner_radius: root.height * 0.015

                # Grid Containing Control Sections
                GridLayout:
                    cols: 3
                    id: control_sections_grid
                    size_hint: 7/8, 1

                    canvas.before:
                        Color:
                            rgba: C('#00FFFFFF')
                        Rectangle:
                            pos: self.pos
                            size: self.size

                    # Top Row
                    Widget:
                        canvas.before:
                            Color:
                                rgba: C('#0F1F00FF')
                            Rectangle:
                                pos: self.pos
                                size: self.size

                        size_hint: (control_sections_grid.width / control_sections_grid.cols, control_sections_grid.height / 2)

                    Widget:
                        canvas.before:
                            Color:
                                rgba: C('#0F1F99FF')
                            Rectangle:
                                pos: self.pos
                                size: self.size

                        size_hint: (control_sections_grid.width / control_sections_grid.cols, control_sections_grid.height / 2)

                    Widget:
                        canvas.before:
                            Color:
                                rgba: C('#FF1F00FF')
                            Rectangle:
                                pos: self.pos
                                size: self.size

                        size_hint: (control_sections_grid.width / control_sections_grid.cols, control_sections_grid.height / 2)

                    # Bottom Row
                    Widget:
                        canvas.before:
                            Color:
                                rgba: C('#99FF00FF')
                            Rectangle:
                                pos: self.pos
                                size: self.size

                        size_hint: (control_sections_grid.width / control_sections_grid.cols, control_sections_grid.height / 2)

                    Widget:
                        canvas.before:
                            Color:
                                rgba: C('#00FF99FF')
                            Rectangle:
                                pos: self.pos
                                size: self.size

                        size_hint: (control_sections_grid.width / control_sections_grid.cols, control_sections_grid.height / 2)

                    Widget:
                        canvas.before:
                            Color:
                                rgba: C('#FF1FFFFF')
                            Rectangle:
                                pos: self.pos
                                size: self.size

                        size_hint: (control_sections_grid.width / control_sections_grid.cols, control_sections_grid.height / 2)

<TopBar>:
    orientation: 'horizontal'
    padding: [sp(self.corner_radius * 0.25), sp(self.corner_radius * 0.25)]

    canvas.before:
        Color:
            rgba: C('#257CFFFF')

        RoundedRectangle:
            pos: root.pos
            size: root.width, root.height
            radius: [0, 0, sp(root.corner_radius), sp(root.corner_radius)]

<LeftBar>:
    orientation: 'vertical'
    spacing: self.parent.height * 0.015
    id: left_bar

    # Voice Mode Box
    VoiceModeBox:
        size_hint: 1, 6/7
        corner_radius: root.corner_radius

    LegatoBox:
        size_hint: 1, 1/7
        corner_radius: root.corner_radius
        text: 'LEGATO'

<VoiceModeBox>:
    orientation: 'vertical'
    padding: [sp(self.corner_radius * 0.25), sp(self.corner_radius * 0.25)]

    canvas.before:
        Color:
            rgba: C('#257CFFFF')

        RoundedRectangle:
            pos: root.pos
            size: root.width, root.height
            radius: [sp(root.corner_radius)]

    VoiceModeButton:
        voice_mode_name: 'POLY'

    VoiceModeButton:
        voice_mode_name: 'UNI-A'

    VoiceModeButton:
        voice_mode_name: 'UNI-B'

    VoiceModeButton:
        voice_mode_name: 'TRI'

    VoiceModeButton:
        voice_mode_name: 'DUO'

    VoiceModeButton:
        voice_mode_name: 'MONO'

<VoiceModeButton>:
    text: self.voice_mode_name
    size_hint: 1, 1 / self.parent.num_voice_modes
    color: C('#ECBFEBFF') if app.voice_mode_name == self.voice_mode_name else C('#06070FFF')
    font_size: (self.height * 0.5) if app.voice_mode_name == self.voice_mode_name else (self.height * 0.4)
    on_release: app.set_voice_mode_by_name(self.voice_mode_name)

<LegatoBox>:
    padding: [sp(self.corner_radius * 0.25), sp(self.corner_radius * 0.25)]

    canvas.before:
        Color:
            rgba: C('#257CFFFF')

        RoundedRectangle:
            pos: root.pos
            size: root.width, root.height
            radius: [sp(root.corner_radius)]

    LegatoButton

<LegatoButton@ButtonBehavior+Label>:
    text: 'LEGATO'
    size_hint: 1, 1
    color: C('#ECBFEBFF') if app.legato else C('#06070FFF')
    font_size: (self.height * 0.5) if app.legato else (self.height * 0.4)
    on_release: app.set_legato(not app.legato)