#:kivy 2.1.0
#:import C kivy.utils.get_color_from_hex
#:import SlideTransition kivy.uix.screenmanager.SlideTransition
#:import NoTransition kivy.uix.screenmanager.NoTransition


<PresetLoadScreen>:
    name: 'preset_load'

    canvas.before:
        Color:
            rgba: C('#092042FF')

        SmoothRectangle:
            pos: self.pos
            size: self.size

    BoxLayout:
        orientation: 'vertical'
        padding: (root.height * 0.008, 0, root.height * 0.008, root.height * 0.008)
        spacing: root.height * 0.008

        # Top Bar
        PresetLoadScreenTopBar:
            screen_name: root.name
            size_hint_y: 3/40
            right_button_is_settings: False
            right_button_transition: 'right'

        # Main Controls
        BoxLayout:
            size_hint_y: 37/40
            orientation: 'horizontal'
            spacing: root.height * 0.008

            # LEFT: Preset Slots
            PresetSlotChooser:
                size_hint_x: 4/9
              
            # RIGHT: Preset Files
            PresetFileChooser:
                size_hint_x: 5/9


<PresetButton@HoverButton>:
    canvas.before:
        Color:
            rgba: C('#257CFFFF')

        SmoothRoundedRectangle:
            pos: self.pos
            size: self.width, self.height
            radius: [app.curr_height * 0.015]

    base_font_size: self.height * 0.5
    screen_name: 'preset_load'
    color: C('#06070FFF') if not root.disabled else C('#B7B7B7FF')
    text_size: self.size
    halign: 'center'
    valign: 'middle'

<PresetSlotButton@HoverButton>:
    base_font_size: self.height * 0.5
    screen_name: 'preset_load'
    text_size: self.size
    halign: 'center'
    valign: 'middle'
    canvas.before:
        Color:
            rgba: C('#257CFFFF')

        SmoothRoundedRectangle:
            pos: self.pos
            size: self.width, self.height
            radius: [app.curr_height * 0.015]

<PresetLoadScreenTopBar>:
    orientation: 'horizontal'
    padding: [0, 0, self.width * 0.01, 0]
    spacing: self.parent.spacing
    screen_name: 'preset_load'

    canvas.before:
        Color:
            rgba: C('#257CFFFF')

        SmoothRoundedRectangle:
            pos: root.pos
            size: root.width, root.height
            radius: [0, 0, app.curr_height * 0.015, app.curr_height * 0.015]

    PresetIncButton:
        screen_name: root.screen_name
        tooltip_text: 'RECALL PREVIOUS PRESET'
        size_hint_x: 2/40
        text: '-'
        base_font_size: self.height * 1.2
        on_release: app.load_prev_preset()

    TopBarSpinner:
        size_hint_x: 14/40
        values: app.presets_spinner_values
        text: app.presets_spinner_text
        on_text: app.presets_spinner_text_changed(self.values.index(self.text), self.text)
        screen_name: root.screen_name
        tooltip_text: 'SELECT A PRESET'

    PresetIncButton:
        screen_name: root.screen_name
        tooltip_text: 'RECALL NEXT PRESET'
        size_hint_x: 2/40
        text: '+'
        on_release: app.load_next_preset()

    Widget:
        size_hint_x: 1/40

    TopBarButton:
        screen_name: root.screen_name
        tooltip_text: 'DISCARD CHANGES AND RELOAD ' + app.presets_spinner_text
        size_hint_x: 4/40
        text: 'REVERT'
        on_release: app.reload()
        disabled: not app.nymphes_connected or app.curr_preset_type == '' or app.unsaved_preset_changes == False

    TopBarButton:
        screen_name: root.screen_name
        size_hint_x: 4/40
        text: 'INIT'
        disabled: app.curr_preset_type == 'init' and app.unsaved_preset_changes == False
        on_release: app.load_init_preset()

    Widget:
        size_hint_x: 8/40

    TopBarButton:
        screen_name: root.screen_name
        size_hint_x: 5/40
        text: 'BACK'
        tooltip_text: ''
        halign: 'right'
        on_release:
            app.root.transition = NoTransition()
            app.root.current = 'main'
            app.set_curr_screen_name('main')
            self.mouse_inside_bounds = False


<PresetSlotChooser>:
    orientation: 'vertical'
    padding: app.curr_height * 0.008
    spacing: app.curr_height * 0.016

    canvas.before:
        Color:
            rgba: C('#1E64CDFF')

        SmoothRoundedRectangle:
            pos: self.pos
            size: self.width, self.height
            radius: [app.curr_height * 0.015]

    PresetSectionLabel:
        text: 'PRESET SLOTS'
        size_hint_y: 1/21

    BoxLayout:
        orientation: 'vertical'
        padding: 0
        spacing: app.curr_height * 0.008
        size_hint_y: 18/21

        PresetSlotButton:
            size_hint_y: 1/9
            text: 'FACTORY'
            color: C('#ECBFEBFF') if root.preset_type == self.text else C('#06070FFF')
            on_release: root.preset_type = self.text

        PresetSlotButton:
            size_hint_y: 1/9
            color: C('#ECBFEBFF') if root.preset_type == self.text else C('#06070FFF')
            text: 'USER'
            on_release: root.preset_type = self.text

        # Preset Slot Bank and Number Buttons
        BoxLayout:
            orientation: 'horizontal'
            padding: 0
            spacing: app.curr_height * 0.008
            size_hint_y: 7/9

            # Preset Bank Buttons
            BoxLayout:
                orientation: 'vertical'
                padding: 0
                spacing: app.curr_height * 0.008

                PresetSlotButton:
                    text: 'A'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'B'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'C'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'D'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'E'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'F'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'G'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

            # Preset Number Buttons
            BoxLayout:
                orientation: 'vertical'
                padding: 0
                spacing: app.curr_height * 0.008

                PresetSlotButton:
                    text: '1'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '2'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '3'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '4'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '5'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '6'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '7'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

    PresetButton:
        size_hint_y: 2/21
        text: "LOAD"
        disabled: not ((root.preset_type != '') & (root.preset_bank != '') & (root.preset_number != ''))
        on_release:
            app.load_preset(root.preset_bank, int(root.preset_number), root.preset_type.lower())
            root.preset_bank = ''
            root.preset_number = ''
            root.preset_type = ''
            self.disabled = True

<PresetSectionLabel@Label>:
    text_size: self.size
    font_size: self.height * 0.7
    halign: 'left'
    valign: 'middle'
    color: C('#06070FFF')


<PresetFileChooser@BoxLayout>:
    orientation: 'vertical'
    padding: app.curr_height * 0.008
    spacing: app.curr_height * 0.016

    canvas.before:
        Color:
            rgba: C('#1E64CDFF')

        SmoothRoundedRectangle:
            pos: self.pos
            size: self.width, self.height
            radius: [app.curr_height * 0.015]

    PresetSectionLabel:
        text: 'PRESET FILES'
        size_hint_y: 1/21

    BoxLayout:
        orientation: 'vertical'
        size_hint_y: 18/21
        padding: 0
        spacing: 0

        canvas.before:
            Color:
                rgba: C('#257CFFFF')

            SmoothRoundedRectangle:
                pos: self.pos
                size: self.width, self.height
                radius: [app.curr_height * 0.015]

        FileChooserListView:
            id: filechooser
            args_converter: lambda row_index, rec: {'name': rec['name']}
            path: str(app._curr_preset_file_path.parent if app._curr_preset_file_path is not None else app._presets_directory_path)
            dirselect: False
            filters: ['*.txt', '*.TXT']
            sort_func: app.file_list_sort_func

    PresetButton:
        size_hint_y: 2/21
        text_size: self.size
        halign: 'center'
        valign: 'middle'
        text: "LOAD"
        disabled: len(filechooser.selection) == 0
        on_release:
            app.load_preset_file(filechooser.selection[0])
            self.disabled = True
