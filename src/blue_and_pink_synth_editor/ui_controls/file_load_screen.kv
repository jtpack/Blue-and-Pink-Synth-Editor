#:kivy 2.1.0
#:import C kivy.utils.get_color_from_hex
#:import SlideTransition kivy.uix.screenmanager.SlideTransition
#:import NoTransition kivy.uix.screenmanager.NoTransition


<FileLoadScreen>:
    name: 'file_load'
    corner_radius: self.height * 0.015

    canvas.before:
        Color:
            rgba: C('#092042FF')

        SmoothRectangle:
            pos: self.pos
            size: self.size

    BoxLayout:
        orientation: 'vertical'
        padding: (root.height * 0.008, 0, root.height * 0.008, root.height * 0.008)
        spacing: root.height * 0.008
        corner_radius: self.parent.corner_radius

        # Top Bar
        FileLoadScreenTopBar:
            screen_name: root.name
            size_hint_y: 3/40
            corner_radius: root.height * 0.015
            right_button_is_settings: False
            right_button_transition: 'right'

        # Main Controls
        BoxLayout:
            orientation: 'horizontal'
            spacing: root.height * 0.008
            corner_radius: self.parent.corner_radius

            # LEFT: Preset Slots Box
            PresetSlotChooser:
                corner_radius: root.height * 0.015
                size_hint_x: 2/5
                spacing: root.height * 0.008

              
            # RIGHT: File Loading
            BoxLayout:
                orientation: 'vertical'
                padding: 0
                spacing: root.height * 0.008
                corner_radius: root.corner_radius
                size_hint_x: 3/5

                BoxLayout:
                    orientation: 'vertical'
                    padding: app.curr_height * 0.008
                    size_hint_y: 9/10

                    canvas.before:
                        Color:
                            rgba: C('#1E64CDFF')

                        SmoothRoundedRectangle:
                            pos: self.pos
                            size: self.width, self.height
                            radius: [app.curr_height * 0.015]

                    PresetButton:
                        corner_radius: root.corner_radius
                        size_hint_y: 1/10
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'
                        text: "LOAD PRESET FILE"
                        disabled: len(filechooser.selection) == 0
                        on_release:
                            app.load_preset_file(filechooser.selection[0])
                            self.disabled = True

                    FileChooserListView:
                        size_hint_y: 9/10
                        id: filechooser
                        args_converter: lambda row_index, rec: {'name': rec['name']}
                        path: str(app._curr_preset_file_path.parent if app._curr_preset_file_path is not None else app._presets_directory_path)
                        dirselect: False
                        filters: ['*.txt', '*.TXT']
                        sort_func: app.file_list_sort_func


<PresetButton@HoverButton>:
    corner_radius: 0
    canvas.before:
        Color:
            rgba: C('#257CFFFF')

        SmoothRoundedRectangle:
            pos: self.pos
            size: self.width, self.height
            radius: [self.corner_radius]

    base_font_size: self.height * 0.5
    screen_name: 'file_load'
    color: C('#06070FFF') if not root.disabled else C('B7B7B7FF')
    text_size: self.size
    halign: 'center'
    valign: 'middle'

<PresetSlotButton@HoverButton>:
    base_font_size: self.height * 0.5
    screen_name: 'file_load'
    text_size: self.size
    halign: 'center'
    valign: 'middle'
    canvas.before:
        Color:
            rgba: C('257CFFFF')

        SmoothRoundedRectangle:
            pos: self.pos
            size: self.width, self.height
            radius: [app.curr_height * 0.015]

<FileLoadScreenTopBar>:
    orientation: 'horizontal'
    padding: [0, 0, self.width * 0.01, 0]
    spacing: self.parent.spacing
    screen_name: 'file_load'

    canvas.before:
        Color:
            rgba: C('#257CFFFF')

        SmoothRoundedRectangle:
            pos: root.pos
            size: root.width, root.height
            radius: [0, 0, root.corner_radius, root.corner_radius]

    canvas.before:
        Color:
            rgba: C('#257CFFFF')

        SmoothRoundedRectangle:
            pos: root.pos
            size: root.width, root.height
            radius: [0, 0, root.corner_radius, root.corner_radius]

    PresetIncButton:
        screen_name: root.screen_name
        tooltip_text: 'RECALL PREVIOUS PRESET'
        size_hint_x: 1/20
        text: '-'
        base_font_size: self.height * 1.2
        on_release: app.load_prev_preset()

    Label:
        size_hint_x: 12/20
        text: app.presets_spinner_text
        text_size: self.size
        font_size: self.height * 0.5
        halign: 'center'
        valign: 'middle'

    PresetIncButton:
        screen_name: root.screen_name
        tooltip_text: 'RECALL NEXT PRESET'
        size_hint_x: 1/20
        text: '+'
        on_release: app.load_next_preset()

    TopBarButton:
        screen_name: root.screen_name
        tooltip_text: 'DISCARD CHANGES AND RELOAD ' + app.presets_spinner_text
        size_hint_x: 2/20
        text: 'REVERT'
        on_release: app.reload()
        disabled: not app.nymphes_connected or app.curr_preset_type == '' or app.unsaved_preset_changes == False

    Widget:
        size_hint_x: 1/20

    TopBarButton:
        screen_name: root.screen_name
        size_hint_x: 3/20
        text: 'BACK'
        tooltip_text: ''
        halign: 'right'
        on_release:
            app.root.transition = NoTransition()
            app.root.current = 'main'
            app.set_curr_screen_name('main')
            self.mouse_inside_bounds = False


<PresetSlotChooser>:
    orientation: 'vertical'
    spacing: app.curr_height * 0.008
    padding: 0
    corner_radius: 0

    PresetButton:
        corner_radius: root.corner_radius
        size_hint_y: 1/10
        text: "LOAD PRESET SLOT"
        disabled: not ((root.preset_type != '') & (root.preset_bank != '') & (root.preset_number != ''))
        on_release:
            app.load_preset(root.preset_bank, int(root.preset_number), root.preset_type.lower())
            root.preset_bank = ''
            root.preset_number = ''
            root.preset_type = ''
            self.disabled = True

    BoxLayout:
        orientation: 'vertical'
        size_hint_y: 9/10
        padding: app.curr_height * 0.008

        canvas.before:
            Color:
                rgba: C('#1E64CDFF')

            SmoothRoundedRectangle:
                pos: self.pos
                size: self.width, self.height
                radius: [app.curr_height * 0.015]

        PresetSlotButton:
            size_hint_y: 1/10
            text: 'FACTORY'
            color: C('#ECBFEBFF') if root.preset_type == self.text else C('#06070FFF')
            on_release: root.preset_type = self.text

        PresetSlotButton:
            size_hint_y: 1/10
            color: C('#ECBFEBFF') if root.preset_type == self.text else C('#06070FFF')
            text: 'USER'
            on_release: root.preset_type = self.text

        # Preset Slot Bank and Number Buttons
        BoxLayout:
            orientation: 'horizontal'
            padding: 0
            spacing: app.curr_height * 0.008
            size_hint_y: 7/10

            # Preset Bank Buttons
            BoxLayout:
                orientation: 'vertical'
                padding: 0
                spacing: app.curr_height * 0.008

                PresetSlotButton:
                    text: 'A'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'B'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'C'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'D'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'E'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'F'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

                PresetSlotButton:
                    text: 'G'
                    color: C('#ECBFEBFF') if root.preset_bank == self.text else C('#06070FFF')
                    on_release: root.preset_bank = self.text

            # Preset Number Buttons
            BoxLayout:
                orientation: 'vertical'
                padding: 0
                spacing: app.curr_height * 0.008

                PresetSlotButton:
                    text: '1'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '2'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '3'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '4'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '5'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '6'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

                PresetSlotButton:
                    text: '7'
                    color: C('#ECBFEBFF') if root.preset_number == self.text else C('#06070FFF')
                    on_release: root.preset_number = self.text

    # Init Preset
    PresetButton:
        text: 'LOAD INIT'
        size_hint_y: 1/10
        corner_radius: root.corner_radius
        disabled: app.curr_preset_type == 'init' and app.unsaved_preset_changes == False
        on_release: app.load_init_preset()